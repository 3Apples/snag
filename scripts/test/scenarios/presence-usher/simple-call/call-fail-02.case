#########################################################
#
# Scenario:
#	- agent "vinod" registers
#	- call is enqueued
#	- agent acks the PLEASE-CALL but immediately disconnects
#
# BUG in VM - the ACCEPT-CALL after the exit still executes - should not
#
#########################################################

#
# Presence Information
#
$pres_host       << "localhost"
$pres_port       << 4000
$pres_id         << "p01"
$presence_aep    << (($pres_id + "=presence"))

#
# Lobby Information
#
$lobby_id        << "lobster"
$lobby_aep       << (($lobby_id + "=lobby"))

#
# Agent Information
#
$group           << "com.3apples.co"
$agent_id        << "vinod"
$agent_aep       << (($agent_id + "=user," + $pres_id + "=presence"))
$token           << "abcd"

#
# Caller Information
#
$caller          << "who_kaun_thee"
$caller_aep      << (($caller + "=user," + $lobby_id + "=lobby"))

#
# Open presence RX broadcast channel
#
nats-init

#
# Setup callbacks for expected incoming messages
#
on-message socket id $agent_id msg-id "PLEASE-CALL"
	- ack socket status "ok"
	#
	# This sleep is required because sometimes the ACK
	# reaches the Usher later than the ACCEPT-CALL pdu.
	#
	#- sleep 200
	- disconnect user $agent
	- exit
	- accept-call user $agent call_id $msg.payload.id
	- sleep 2000
	- end-call agent_aep $agent_aep call_id $msg.payload.id
	- exit

#
# agent vinod registering
#
$agent << CONNECT presence host $pres_host port $pres_port node-id $pres_id user-id $agent_id group $group
AUTHENTICATE user $agent token $token

assert (($response.header.type == 'ok'))
assert (($response.header.from == $presence_aep))
assert (($response.payload.your_aep == $agent_aep))

WHOS-MY-USHER user $agent
assert (($response.header.type == 'ok'))

AGENT-AVAILABLE user $agent
assert (($response.header.type == 'ok'))

#
# Lobby enqueueing a call
#
WHO-HAS from $lobby_aep group $group
ENQUEUE-CALL from $caller_aep  group $group channel $response.payload.channel

wait-for-exit
